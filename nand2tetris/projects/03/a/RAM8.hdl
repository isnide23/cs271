// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=a0, b=b1, c=c2, d=d3, e=e4, f=f5, g=g6, h=h7);

    Register(in=in, load=a0, out=a0Out);
    Register(in=in, load=b1, out=b1Out);
    Register(in=in, load=c2, out=c2Out);
    Register(in=in, load=d3, out=d3Out);
    Register(in=in, load=e4, out=e4Out);
    Register(in=in, load=f5, out=f5Out);
    Register(in=in, load=g6, out=g6Out);
    Register(in=in, load=h7, out=h7Out);

    Mux8Way16(a=a0Out, b=b1Out, c=c2Out, d=d3Out, e=e4Out, f=f5Out, g=g6Out, h=h7Out, sel=address, out=out);
}